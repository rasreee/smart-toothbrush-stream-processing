"""
Dataset processing jobs.

"""


class Job:
    """
    A single dataset processing job.

    Instances of this class are generated by `JobQueue.poll()`. Everything you
    need to save regarding how your job is doing, or when and how it finished,
    is done through a job.

    """


    def commit(self):
        """
        Mark the job finished successfully! This should be the last call you
        make right before your job handler returns.

        Don't call this method if you encountered an error during processing
        from which you couldn't recover. Call `job.failed()` instead.

        """
        raise NotImplementedError()


    @property
    def dataset(self):
        """
        The input dataset. This is an instance of `Dataset`.

        """
        raise NotImplementedError()


    def failed(self, reason):
        """
        Mark the job finished unsuccessfully.

        reason : str
            Short message summarizing what went wrong.

        """
        raise NotImplementedError()


    def save_statistic(self, name, value):
        """
        Record a statistic or fact about the dataset as a whole.

        Three stats we'd like to record for sure:
          - `t_start`
          - `t_end`
          - `duration_data_lost`
        However, feel free to be creative and record whatever stats you think
        would be helpful to answer questions about this dataset.

        Example:
        ```
        job.save_statistic('t_start', my_first_point.timestamp)
        ```

        """
        raise NotImplementedError()
